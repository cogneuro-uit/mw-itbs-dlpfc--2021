---
title: "PFC results writeup"
format: docx
---

```{r, echo=F, warning=F, message=F}
library(tidyverse)
library(gt)

source("../lib/fmt_APA.R")
source("../lib/mcmc.R")
load("../data/export/paper_vars.RData")


# samples as matrix
sae <- as.matrix(mod.pfc.ae)
sbv <- as.matrix(mod.pfc.bv)
smw <- as.matrix(mod.pfc.mw)
smb <- as.matrix(mod.pfc.mb)
ssmw <- as.matrix(mod.pfc.smw)

loL <- list()
loL[["MW"]] <- brms::loo(mod.pfc.mw)$estimates["looic",]
loL[["MB"]] <- brms::loo(mod.pfc.mb)$estimates["looic",]
loL[["SMW"]] <- brms::loo(mod.pfc.smw)$estimates["looic",]
loL[["BV"]] <- brms::loo(mod.pfc.bv)$estimates["looic",]
loL[["AE"]] <- brms::loo(mod.pfc.ae)$estimates["looic",]

coef_hdi <- function(x){
  m <- mean(x)
  ll <- hdi(x)[1]
  ul <- hdi(x)[2]
  #ll <- quantile(x, 0.025)
  #ul <- quantile(x, 0.975)
  erat <- if_else( m>0, sum(x>0)/sum(x<=0), sum(x<0)/sum(x>=0) )
  pval <- if_else( m>0, sum(x>0)/length(x), sum(x<0)/length(x) )

  dir <- if_else(m>=0, "+", "-")
  # pval=sprintf("%.2f",pval)
  if(is.infinite(erat)){
    erat=ifelse(erat<0, "-\\infty", "\\infty")
  } else {
    erat=fmt_APA_numbers(erat)
  }
  sprintf("$b=%s, [%s, %s], p^{%s}=%s, \\text{ER}^{%s}=%s$", 
          fmt_APA_numbers(m), 
          fmt_APA_numbers(ll), 
          fmt_APA_numbers(ul), 
          dir, 
          fmt_APA_numbers(pval, .p=T),
          dir, 
          erat
          )
}

# coef_hdi <- function(x, dir="+"){
#   ## logistic regression models
#   m <- mean(x)
#   ll <- hdi(x)[1]
#   ul <- hdi(x)[2]
#   #ll <- quantile(x, 0.025)
#   #ul <- quantile(x, 0.975)
#   erat <- sum(x>=0)/sum(x<0)
#   pval <- sum(x>=0)/length(x)
#   if(dir!="+"){
#     erat=1./erat
#     pval=1-pval
#   }
#   pval=sprintf("%.2f",pval)
#   if(is.infinite(erat)){
#     erat=ifelse(erat<0, "-\\infty", "\\infty")
#   } else {
#     erat=sprintf("%.2f",erat)
#   }
#   or = sprintf("%.2f", mean(exp(x)))
#   llor = hdi(exp(x))[1]
#   ulor = hdi(exp(x))[2]
#   sprintf("$b=%.2f, [%.2f, %.2f], p^{%s}=%s,%s\n \\text{ER}^{%s}=%s,  \\text{OR}=%s, [%.2f, %.2f]$", 
#           m,         ll, ul,        dir, pval,               dir, erat,            or, llor, ulor)
# }
```

```{r include=F}
# most of this is describe in the "statistical analysis" and is therefore left out of the text below.
"
We used Bayesian hierarchical models to estimate the effects of the predictors trial number (z-transformed), block (B0, B1, B2, B3) and stimulation (sham vs. real) on self-reported MW and the behavioural indices AE and BV.


We also investigated the proportion of MW responses that were categorized by our participants as mind-blanking (MB) and spontaneous MW. For this analysis, we only utilized MB and spontaneous MW responses that followed a MW report (i.e., a 1 or 2 response). We then used two separate Bayesian ordered-probit models for the MB and spontaneous MW responses over the blocks and stimulation conditions (see Table 2).
"
```

We used Hamiltonian Monte-Carlo algorithms implemented in the Stan software [@stan] to sample from 6 parallel chains with 3000 samples each, discarding the first 1500 samples of each chain. Convergence of all models was confirmed visually and all $\hat{R}$-values were confirmed to be lower than 1.05. We used the default priors implemented in the brms-package [@brms] which are non-informative for coefficients corresponding to fixed effects and weakly informative for the intercept and standard-deviation parameters (Student-t prior with 3 df, mean 0 and SD 2.5). For each coefficient, we report its posterior mean $b$ and 95% highest-density interval (HDI). In addition, for directed effects, we report the probability of the effect to be positive ($p^{+}$) or negative ($p^{-}$) as well as the evidence ratio for a positive ($\text{ER}^{+}$) or negative effect ($\text{ER}^{-}$). The ER quantifies how much more likely the effect is to be in the expected compared to the opposite direction.

### Self-reported MW

Results of the Bayesian ordered probit model for MW indicate that MW increased within blocks as a function of trial (`r coef_hdi(smw[,"b_scaleproberound"])`). Compared to baseline (B0), in the sham condition, MW was not changed in the first block (B0 to B1: `r coef_hdi(smw[,"b_blockB1"])`), but some evidence suggested that MW increased in the second block (B0 to B2: `r coef_hdi(smw[,"b_blockB2"])`), this increase return to baseline levels in the third block (B0 to B3: `r coef_hdi(smw[,"b_blockB3"])`). Compared to sham stimulation, some evidence suggested that real stimulation increased MW in the first block (stimulation $\times$ B1: `r coef_hdi(smw[,"b_stimulationreal:blockB1"])`), more evidence was found for an increase in the second block (stimulation $\times$ B2: `r coef_hdi(smw[,"b_stimulationreal:blockB2"])`), but only some evidence was found for an increase in the third block (stimulation $\times$ B3: `r coef_hdi(smw[,"b_stimulationreal:blockB3"])`).

MB appeared to increase as a function of trial within each block (`r coef_hdi(smb[,"b_scaleproberound"])`). Compared to baseline, in the sham condition, MB appeared to be unchanged in the first block (B0 to B1: `r coef_hdi(smb[,"b_blockB1"])`), but some evidence was found for a reduction in the second block (B0 to B2: `r coef_hdi(smb[,"b_blockB2"], dir="-")`), but this reduction returned to baseline in the third block (B0 to B3: `r coef_hdi(smb[,"b_blockB3"], dir="-")`). Compared to the sham stimulation, real stimulation did not influence MB in the first block (stimulation $\times$ B1: `r coef_hdi(smb[,"b_stimulationreal:blockB1"])`), or the second block (stimulation $\times$ B2: `r coef_hdi(smb[,"b_stimulationreal:blockB2"])`), but some evidence suggested that MB was reduced in the third block (stimulation $\times$ B3: `r coef_hdi(smb[,"b_stimulationreal:blockB3"])`).

Spontaneous MW (SMW) did not appear to change within block (`r coef_hdi(ssmw[,"b_scaleproberound"])`). Compared to baseline, in the sham stimulation, some evidence was found suggesting that SMW was increased in the first block (B1: `r coef_hdi(ssmw[,"b_blockB1"])`), and the second block (B2: `r coef_hdi(ssmw[,"b_blockB2"])`), yet more evidence for an increase was found in the third block (`r coef_hdi(ssmw[,"b_blockB3"])`). Compared to sham stimulation, real stimulation did not affect SMW in the first block (stimulation $\times$ B1: `r coef_hdi(ssmw[,"b_stimulationreal:blockB1"])`), the second block (stimulation $\times$ B2: `r coef_hdi(ssmw[,"b_stimulationreal:blockB2"])`), or the third block (stimulation $\times$ B3 `r coef_hdi(ssmw[,"b_stimulationreal:blockB3"])`).

### Behavioural indices

In terms of the performance indices (see Table 3), BV increased within each block as a function of trial (`r coef_hdi(sbv[,"b_scaleproberound"])`). Compared to baseline (B0), in the sham condition, BV did not appear to change in first block (B0 to B1: `r coef_hdi(sbv[,"b_blockB1"])`), but strong evidence was found for an increase in the second block (B0 to B2, `r coef_hdi(sbv[,"b_blockB2"])`), but returned to baseline levels in the last block (`r coef_hdi(sbv[,"b_blockB3"])`). Compared to the sham stimulation, real stimulation did not influence BV in the first block (stimulation $\times$ B1: `r coef_hdi(sbv[,"b_stimulationreal:blockB1"])`), but strong evidence was found for a decrease in the second block (stimulation $\times$ B2: `r coef_hdi(sbv[,"b_stimulationreal:blockB2"])`), and this decrease returned to baseline levels in the third block (stimulation $\times$ B3: `r coef_hdi(sbv[,"b_stimulationreal:blockB3"])`).

AE did not show a clear relationship with trial (`r coef_hdi(sae[,"b_scaleproberound"])`). Compared to baseline, in the sham stimulation, AE was reduced in the first block (B1: `r coef_hdi(sae[,"b_blockB1"])`), the second block (B2: `r coef_hdi(sae[,"b_blockB2"])`), and the third block (B3: `r coef_hdi(sae[,"b_blockB3"])`). Compared to the sham stimulation, some evidence suggested that real stimulation increased AE in the first block (stimulation $\times$ B1: `r coef_hdi(sae[,"b_stimulationreal:blockB1"])`). but this increase returned to baseline levels in the second (stimulation $\times$ B2: `r coef_hdi(sae[,"b_stimulationreal:blockB2"])`), and third block (stimulation $\times$ B3: `r coef_hdi(sae[,"b_stimulationreal:blockB3"])`).

## Tables

### MW, MB & S-MW

```{r echo=F}
# Split HDI ======  
get_summary <- function(mod){
  X <- as_tibble(mod) |> select(starts_with("b_"), sd_subj__Intercept) |>
    gather(variable,val) |>
    group_by(variable) |>
    summarize(mean=mean(val), 
              q5  = hdi(val)[1],
              q95 = hdi(val)[2],
              pd = ifelse(mean(val < 0) < 0.5, mean(val > 0), mean(val < 0))) |>
    mutate(variable=fct_recode(variable, 
      Threshold1="b_Intercept[1]", Threshold2="b_Intercept[2]", 
      Threshold3="b_Intercept[3]", B1="b_blockB1", B2="b_blockB2", B3="b_blockB3",
      `Stimulation (B0)`="b_stimulationreal", Trial="b_scaleproberound",  
      `B1 x stimulation`="b_stimulationreal:blockB1", `B2 x stimulation`="b_stimulationreal:blockB2",
      `B3 x stimulation`="b_stimulationreal:blockB3", `Sigma (subjects)`="sd_subj__Intercept"),
           variable=ordered(variable, levels=
                c("Threshold1", "Threshold2", "Threshold3",
                  "Trial","Stimulation (B0)", "B1","B2","B3", 
                  "B1 x stimulation", "B2 x stimulation", "B3 x stimulation", 
                  "Sigma (subjects)"))) |> # σ
    arrange(variable) |>
    mutate(group=case_when(variable %in% c("Sigma (subjects)") ~ "Model fit",
                           T ~ "Coefficients")) |>
    mutate(b = sprintf("%.2f%s", mean, ifelse(pd>=0.95 & group=="Coefficients", "*", "")),
           HDI = sprintf("[%.2f, %.2f]", q5, q95),
           pd = fmt_APA_numbers(pd, .p=T)) |>
    select(-mean,-q5, -q95)# |> 
   # select(everything(), pd)

  r2 <- brms::bayes_R2(mod)
  lo <- brms::loo(mod)$estimates["looic",]
  
  X <- X |> 
    add_row(variable = "R2", pd="", #²
            b        = fmt_APA_numbers(r2[1], .p=T),
            HDI      = fmt_APA_numbers(c(r2[3], r2[4]),.p=T) %>% {str_glue("[{.[1]}, {.[2]}]")},
            group    = "Model fit") |>
    add_row(variable = "LOOIC", pd="", 
            b        = fmt_APA_numbers(lo[1], .chr=T),
            HDI      = paste0("(SE=", fmt_APA_numbers(lo[2]), ")"),
            group    = "Model fit") 
}
bind_cols(
  get_summary(mod.pfc.mw),
  get_summary(mod.pfc.mb)[,c("b","HDI", "pd")] |> rename(MBb = b, MBhdi = HDI, MBpd = pd), 
  get_summary(mod.pfc.smw)[,c("b","HDI", "pd")] |> rename(SMWb = b, SMWhdi = HDI, SMWpd = pd)) -> M
```

```{r, echo=F, eval=T}
M |>
  gt(rowname_col = "variable", groupname_col = "group") |>
  tab_spanner(
    label = md("MW"),
    columns = c("b", "HDI", "pd"),
    id="mw") |>
  tab_spanner(
    label = md("MB"),
    columns = c("MBb", "MBhdi", "MBpd"),
    id="mb") |>
  tab_spanner(
    label = md("spontaneous MW"),
    columns = c("SMWb", "SMWhdi", "SMWpd"),
    id="smw") |>
  cols_label(
    .list = list(
      "b" = "b",
      "HDI" = "HDI",
      "pd" = md("pᵈ"), 
      "MBb" = "b", 
      "MBhdi" = "HDI",
      "MBpd" = md("pᵈ"),
      "SMWb" = "b",
      "SMWhdi" =  "HDI",
      "SMWpd" = md("pᵈ") ) ) |>
  cols_align(
      align = "center",
      columns = one_of(c("b","HDI","pd", "MBb", "MBhdi", "MBpd", "SMWb","SMWhdi","SMWpd"))
    ) |>
  fmt_markdown(columns=one_of("variable")) |>
  tab_caption(md("Summary of ordered-probit models for MW, MB, and S-MW.")) |>
   tab_footnote(
    footnote = md("*: pᵈ >0.95 "),
    locations = cells_row_groups(groups= c("Coefficients")),
    placement = "right"
  )
```

### AE and BV

```{r, echo=F}
get_summary_behav <- function(mod){
  X <- as_tibble(mod) |> select(starts_with("b_"), sigma,sd_subj__Intercept) |>
    gather(variable,val) |>
    group_by(variable) |>
    summarize(mean=mean(val), 
              q5  = hdi(val)[1],
              q95 = hdi(val)[2],
              pd=ifelse(mean(val < 0) < 0.5, mean(val > 0), mean(val < 0))) |>
    mutate(variable=fct_recode(variable, Intercept="b_Intercept",
                               B1="b_blockB1", B2="b_blockB2", B3="b_blockB3",
                               `Stimulation (B0)`="b_stimulationreal",
                               Trial = "b_scaleproberound", 
                               `B1 x stimulation`="b_stimulationreal:blockB1",
                               `B2 x stimulation`="b_stimulationreal:blockB2",
                               `B3 x stimulation`="b_stimulationreal:blockB3",
                               `Sigma (subjects)`="sd_subj__Intercept",
                               `Sigma`="sigma"),
           variable=ordered(variable, levels=c("Intercept", "Trial","Stimulation (B0)", 
                                               "B1","B2","B3", "B1 x stimulation",
                                               "B2 x stimulation", "B3 x stimulation", 
                                               "Sigma (subjects)", "Sigma"))) |> #σ
    arrange(variable) |>
    mutate(group=case_when(variable %in% c("Sigma (subjects)","Sigma") ~ "Model fit",
                           T ~ "Coefficients")) |>
    mutate(b   = sprintf("%.2f%s", mean, ifelse(pd>=0.95 & group=="Coefficients", "*", "")),
           HDI = sprintf("[%.2f, %.2f]", q5, q95),
           pd  = fmt_APA_numbers(pd, .p=T)) |>
    select(-mean,-q5, -q95) 

  r2 <- brms::bayes_R2(mod)
  lo <- brms::loo(mod)$estimates["looic",]
  X <- X |> 
    add_row(variable = "R2", pd="", #²
            b        = fmt_APA_numbers(r2[1], .p=T),
            HDI      = fmt_APA_numbers(c(r2[3], r2[4]),.p=T) %>% {str_glue("[{.[1]}, {.[2]}]")},
            group    = "Model fit") |>
    add_row(variable = "LOOIC", pd="", 
            b        = fmt_APA_numbers(lo[1], .chr=T),
            HDI      = paste0("(SE=", fmt_APA_numbers(lo[2]), ")"),
            group    = "Model fit") 
  X
}
bind_cols(
  get_summary_behav(mod.pfc.bv) |> rename(BV=b, BVhdi = HDI, BVpd = pd), 
  get_summary_behav(mod.pfc.ae)[,c("b","HDI", "pd")] |> rename(AE = b, AEhdi = HDI, AEpd=pd)) -> M2
```

```{r, echo=F, eval=T}
M2 |>
  gt(rowname_col = "variable", groupname_col = "group") |>
  tab_spanner(
    label = md("AE"),
    columns = c("AE", "AEhdi", "AEpd"),
    id="ae"
  ) |>
    tab_spanner(
    label = md("BV"),
    columns = c("BV", "BVhdi","BVpd"),
    id="bv"
  ) |>
  cols_label(
    .list = list(
      "AE" = "b", 
      "AEhdi" = "HDI",
      "AEpd"=md("pᵈ"),
      "BV" = "b", 
      "BVhdi" = "HDI",
      "BVpd"=md("pᵈ")
  )) |>
  cols_align(
      align = "center",
      columns = one_of(c("AE","AEhdi", "AEpd","BV","BVhdi","BVpd"))
    ) |>
  fmt_markdown(columns=one_of("variable")) |>
  tab_caption(md("Summary of regression models for AE and BV.")) |>
   tab_footnote(
    footnote = md("*: pᵈ >0.95 "),
    locations = cells_row_groups(groups= c("Coefficients")),
    placement = "right"
  )

```

```{r}
sbv |> 
  as_tibble() |> 
  select(`b_stimulationreal:blockB1`, `b_stimulationreal:blockB2`,`b_stimulationreal:blockB3`) |>
  mutate(b2_b1 = `b_stimulationreal:blockB2` - `b_stimulationreal:blockB1`,
         b3_b2 = `b_stimulationreal:blockB3` - `b_stimulationreal:blockB2`) |>
  summarise(
    m = mean(b2_b1),
    hdi = hdi(b2_b1)[[1]],
    hdi2 = hdi(b2_b1)[[2]],
    er = mean( sum(b2_b1<0) / sum(b2_b1>=0) )
    # m2 = mean(b3_b2),
  )
  
```

```{r}
smw
sbv
sae
```
